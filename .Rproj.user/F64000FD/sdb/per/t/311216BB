{
    "contents" : "library(GLMMF)\nlibrary(StateSpaceGLMM)\nlibrary(nloptr)\nlibrary(KFAS)\nlibrary(numDeriv)\ndat = read.csv(\"../GLMMF/born.csv\")\nY = dat[,-(1:4)]\nX = dat[,2:4] #remove id column\n#remove rare species:\nY = as.matrix(Y[,apply(Y>0,2,sum)>10])\n\nXdat<-do.call(rbind, replicate(ncol(Y), X, simplify=FALSE)) # 5069  3\nspecies<-rep(colnames(Y),each=nrow(Y))\nborneodata<-data.frame(c(Y),Xdat,species)\nnames(borneodata)<-c(\"abundance\",colnames(Xdat),\"species\")\nsave(borneodata,file=\"borneodata.rda\")\n\nload(\"borneodata.rda\")\n\nset.seed(12345)\nrandu1<-rnorm(37)\nrandu2<-rnorm(37)\n\nfitinit_glmm<-glmm(response.var=\"abundance\",grouping.var=\"species\",\n              fixed=~randu1+randu2,\n              latent.factors=0,data=borneodata,distribution=\"poisson\",maxiter=100)\nfitinit_glmm$log #-1561.845\ninitmat_glmm<-t(matrix(fitinit_glmm$fixed$coef,ncol=13)[2:3,])\n\nfitinit_glmmf<-glmmf(group=\"species\",response=\"abundance\",distinct=~randu1+randu2,\n               nfactors=0,distribution=\"poisson\",maxiter=100,\n               data=borneodata,control=list(trace=1,REPORT=1),method=\"BFGS\",trace=2,estimate=F)\n\n\nfitinit_glmmf$log #-1561.845\ninitmat_glmmf<-t(matrix(fitinit_glmmf$coefs[,37],nrow=3)[2:3,])\n\nall.equal(unname(fitinit_glmm$fixed$coef),fitinit_glmmf$coefs[,37])\n\n\n\nfit_glmm<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,maxiter=100,convtol=1e-10,\n                                latent.factors=2,init.factors=initmat_glmm[lower.tri(initmat_glmm,TRUE)],\n               data=borneodata,distribution=\"poisson\",print_level=1,estimate=T,maxeval=100000)\nfit_glmm$logLik #-1346.198489\n\nfit_glmm_true<-fit_glmm\nfit_glmm_true$logLik\n\namodel<-approxSSM(fit_glmm$model)\n\nlikfn<-function(pars,model,estimate=TRUE){\n  Z<-matrix(0,13,2)\n  Z[lower.tri(Z,TRUE)]<-pars\n  model$Z[,14:15,]<-Z\n  if(estimate)\n    -logLik(model)\n  else model\n}\n\nfit<-optim(f=likfn,p=initmat_glmm[lower.tri(initmat_glmm,TRUE)],model=amodel,method=\"BFGS\",control=list(trace=1,REPORT=1))\n\nmodel<-fit_glmm$model\nZ<-matrix(0,13,2)\nZ[lower.tri(Z,TRUE)]<-fit$p\nmodel$Z[,14:15,]<-Z\nlogLik(model)\nfit<-optim(f=likfn,p=Z[lower.tri(Z,TRUE)],model=approxSSM(model),method=\"BFGS\",control=list(trace=1,REPORT=1))\n\nZ<-matrix(0,13,2)\nZ[lower.tri(Z,TRUE)]<-fit$p\nmodel$Z[,14:15,]<-Z\nlogLik(model)\n\nfit_glmmf<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",\n                 convtol=1e-8,maxiter=100,maxiter2=5,init.theta=\"iterative\",init.factor=initmat_glmmf,\n                 data=borneodata,control=list(trace=1,REPORT=1,maxit=100),method=\"BFGS\",\n                 estimate=T,trace=1)\nfit_glmmf$logLik #-1346.198\n\nmodel<-fit_glmm$model\n\nlikfn1<-function(pars){\nmodel$Z[1,14,]<-pars\nlogLik(model,convtol=1e-15,maxiter=500)\n}\n\ngrad(likfn1,1)\n\n\n\ngpois<-function(psi){\n  model$Z[1,14,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  -sum(out$alpha[,14]*(model$y[,1]-exp(out$theta[,1])))\n}\n\n\n\ngrad(likfn,1)\n\n\nlikfn3<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  logLik(app)+ KFAS:::scaling(model$y, model$u, model$distribution, app$theta)-\n    sum(dnorm(app$y,app$theta,sqrt(c(t(apply(app$H,3,diag)))),log=T))\n}\n\ngrad(likfn3,1)\n\nlikfn4<-function(pars){  \n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  app$Z[1,14,]<-pars  \n  out<-KFS(app,smoothing=\"mean\")\n  (logLik(app)+ KFAS:::scaling(model$y, model$u, model$distribution, out$mu)-\n    sum(dnorm(app$y,out$mu,sqrt(c(t(apply(app$H,3,diag)))),log=T)))\n}\n\ngrad(likfn4,1)\nmodel2<-model\nmodel2$Z[1,14,]<-1\napp2<-approxSSM(model2,tol=1e-15,maxiter=500)\nlogLik(app2)\nx<-sapply(1:37,function(i)\n  (app$y[i,1]*out$alpha[i,14]-(out$V[14,,i]+out$alpha[i,14]%*%t(out$alpha[i,]))%*%model$Z[1,,i])/app$H[1,1,i]\n) ### sama kuin likfn4!!\n\n\n######################################\nlikfn2<-function(pars){\n  model$Z[1,14,]<-pars\n  logLik(approxSSM(model))\n}\n\nlikfn2b<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  logLik(model,convtol=1e-15,maxiter=500)-KFAS:::scaling(model$y, model$u, model$distribution, app$theta)+\n    sum(dnorm(app$y,app$theta,sqrt(c(t(apply(app$H,3,diag)))),log=T))\n}\nlikfn3<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  logLik(app)+ KFAS:::scaling(model$y, model$u, model$distribution, app$theta)-\n    sum(dnorm(app$y,app$theta,sqrt(c(t(apply(app$H,3,diag)))),log=T))\n}\n\nlikfnP<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  KFAS:::scaling(model$y, model$u, model$distribution, app$theta)\n}\nlikfnG<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n    sum(dnorm(app$y,app$theta,sqrt(c(t(apply(app$H,3,diag)))),log=T))\n}\n\nlikfn4<-function(pars){\n  app<-approxSSM(model)\n  app$Z[1,14,]<-pars\n  logLik(app)\n}\n\nlikfnP2<-function(pars){\n  \n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  app$Z[1,14,]<-pars\n  out<-KFS(app,smoothing=\"mean\")\n  KFAS:::scaling(model$y, model$u, model$distribution, out$mu)\n}\ngrad(likfnP,model$Z[1,14,1])\ngrad(likfnP2,model$Z[1,14,1])\n\ngrad(likfn1,model$Z[1,14,1]+1)\ngrad(likfn2,model$Z[1,14,1])\ngrad(likfn2,model$Z[1,14,1])\ngrad(likfn3,model$Z[1,14,1])\ngrad(likfn4,model$Z[1,14,1])\ngrad(likfnP,model$Z[1,14,1])\ngrad(likfnG,model$Z[1,14,1])\n\n\n\nlikfnP<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  sum(dpois(model$y,exp(app$theta),log=TRUE))\n}\n\nlikfnP2<-function(pars){\n  \n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  out<-KFS(app)\n  app$Z[1,14,]<-pars\n  theta<-matrix(0,37,13)\n  for(i in 1:37)\n    theta[i,]<-app$Z[,,i]%*%out$alpha[i,]\n  sum(dpois(model$y,exp(theta),log=TRUE))\n}\n\nlikfnP3<-function(pars){ \n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  app$Z[1,14,]<-pars\n  out<-KFS(app)\n  theta<-matrix(0,37,13)\n  for(i in 1:37)\n    theta[i,]<-app$Z[,,i]%*%out$alpha[i,]\n  sum(dpois(model$y,exp(theta),log=TRUE))\n}\ngrad(likfnP,model$Z[1,14,1]+1)\ngrad(likfnP2,model$Z[1,14,1]+1)\ngrad(likfnP3,model$Z[1,14,1]+1)\n\ngradf<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  out<-KFS(app,smoothing=\"state\")\n  gradmat<-0\n  k<-14\n  #for(j in 1:13)\n  j<-1\n  for(i in 1:37){\n    gradmat<-gradmat+(model$y[i,j]-exp(app$theta[i,j]))*out$alpha[i,k]#+(model$y[i,j]-exp(app$theta[i,j]))*out$alpha[i,k]\n  }\n  gradmat\n}\n\ngradf<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model,tol=1e-15,maxiter=500)\n  out<-KFS(app,smoothing=\"state\")\n  gradmat<-0\n  k<-14\n  j<-1\n  for(i in 1:37){\n    gradmat<-gradmat+0.5*out$alpha[i,k]*(1+model$y[i,j]^2*exp(-app$theta[i,j])-exp(app$theta[i,j]))+ #approx, purettu ytilde ja h auki\n                     (model$y[i,j]-exp(app$theta[i,j]))*out$alpha[i,k]                              #poisson p(y|theta)\n                     (1/app$H[j,j,i])*(app$y[i,j]*out$alpha[i,k]-(out$alpha[i,k]%*%t(out$alpha[i,]))%*%model$Z[j,,i])                                                                            #gaussian g(y|theta) \n                  \n  }\n  gradmat\n}\ngradf(model$Z[1,14,1])\n\ngradmat<-0\nj<-1\nk<-14\nfor(i in 1:37){\n  gradmat<-gradmat+(model$y[i,j]-exp(app$theta[i,j]))*out$alpha[i,k]\n}\ngradmat\n\n\nf<-function(pars){\n  model$Z[1,14,]<-pars\n  app<-approxSSM(model)\n  out<-KFS(app)\n  x<-0\n  for(i in 1:37)\n   x<- x + dpois(model$y[i,1],exp(out$mu[i,1]),log=TRUE)\n  x\n}\n\nf2<-function(pars){\n  model$Z[1,14,]<-pars\n  out<-KFS(approxSSM(model))\n  app<-approxSSM(model)\n  x<-0\n  for(i in 1:37)\n    x<- x + dpois(model$y[i,1],exp(app$theta[i,1]),log=TRUE)\n  x\n}\n\ngrad(likfnP,model$Z[1,14,1])\ngrad(f,model$Z[1,14,1])\ngrad(f2,model$Z[1,14,1])\nout<-KFS(approxSSM(model))\napp<-approxSSM(model)\nx<-0\nfor(i in 1:37)\n  x<- x + dpois(model$y[i,1],exp(app$theta[i,1]),log=TRUE)*exp(app$theta[i,1])*out$alpha[i,14]\nx\ngradmat<-0\nj<-1\nk<-14\nfor(i in 1:37){\n  gradmat<-gradmat+(model$y[i,j]*out$alpha[i,k]-exp(app$theta[i,j]))\n}\ngradmat\n\ngradmat<-0\nj<-1\nk<-14\n    for(i in 1:37){\n      gradmat<-gradmat+(model$y[i,j]-exp(model$Z[j,,i]%*%out$alpha[i,]))*out$alpha[i,k]\n    }\ngradmat\n\nx<-sapply(1:37,function(i)\n  (app$y[i,1]*out$alpha[i,14]-(out$V[14,,i]+out$alpha[i,14]%*%t(out$alpha[i,]))%*%model$Z[1,,i])/app$H[1,1,i]\n) ### sama kuin likfn4!!\n\nsum(x)\n\nlikfn2<-function(pars){\n  model$Z[1,14,]<-pars\n  logLik(approxSSM(model))\n}\n\nlikfn4<-function(pars){\n  app<-approxSSM(model)\n  app$Z[1,14,]<-pars\n  logLik(app)\n}\n\n\n\ngrad(likfn2,model$Z[1,14,1])/\ngrad(likfn4,model$Z[1,14,1])\n\n\n\nx<-sapply(1:37,function(i)\n  (app$y[i,1]*out$alpha[i,14]-(out$V[14,,i]+out$alpha[i,14]%*%t(out$alpha[i,]))%*%model$Z[1,,i])/app$H[1,1,i]*\n    out$alpha[i,14]\n) ### sama kuin likfn4!!\n\nsum(x)\n\n\nx<-lapply(1:37,function(i)\n  (t(app$y[i,]%*%t(out$alpha[i,]))-(out$V[,,i]+out$alpha[i,]%*%t(out$alpha[i,]))%*%t(model$Z[,,i]))%*%solve(app$H[,,i])\n)\n\n\n(app$y[i,1]*out$alpha[i,14]-(out$V[14,,i]+out$alpha[i,14]%*%t(out$alpha[i,]))%*%model$Z[1,,i])/app$H[1,1,i]\n\nx<-sapply(1:37,function(i)\n(app$theta[i,1]*out$alpha[i,14]-(out$V[14,,i]+out$alpha[i,14]%*%t(out$alpha[i,]))%*%model$Z[1,,i])/app$H[1,1,i]\n)\n\n\nx<-sapply(1:37,function(i)\n  (app$theta[i,1]*out$alpha[i,]-(out$V[,,i]+out$alpha[i,]%*%t(out$alpha[i,]))%*%model$Z[1,,i])/app$H[1,1,i]\n)\n\nsum(x)\ngradmat1<-gradmat2<-gradmat3<-matrix(0,13,2)\n\nfor(j in 1:13)\n  for(k in 14:15)\n    for(i in 1:37){\n      gradmat1[j,k-13]<-gradmat1[j,k-13]+(app$y[i,j]*out$alpha[i,k]-(out$V[k,,i]+out$alpha[i,k]%*%t(out$alpha[i,]))%*%model$Z[j,,i])/app$H[j,j,i]\n      gradmat2[j,k-13]<-gradmat2[j,k-13]+(model$y[i,j]-exp(model$Z[j,,i]%*%out$alpha[i,]))*out$alpha[i,k]\n      gradmat3[j,k-13]<-\n        gradmat3[j,k-13]+(1/(2*app$H[j,j,i]))*(-2*app$y[i,j]*out$alpha[i,k]+2*(out$alpha[i,k]%*%t(out$alpha[i,]))%*%(model$Z[j,,i]))    \n    }\ngradmat1[1,1]\ngradmat2[1,1]\ngradmat3[1,1]\nlibrary(numDeriv)\n\n\nout0<-logLik(fit_glmm$model,maxit=0,smoothing=c(\"state\",\"signal\",\"mean\"),simp=F)\nouta0<-KFS(approxSSM(fit_glmm$model,maxit=0),smoothing=c(\"state\",\"signal\",\"mean\"),simp=F)\nout0\nouta0$log\n\nout1<-logLik(fit_glmm$model,maxit=1,smoothing=c(\"state\",\"signal\",\"mean\"),simp=F)\nouta1<-KFS(approxSSM(fit_glmm$model,maxit=1),smoothing=c(\"state\",\"signal\",\"mean\"),simp=F)\nout1\nouta1$log\nunname(outa0$alpha[1,])\n\n[1] -36.513980 -24.545513  10.868912  -6.640139  -6.094058 -15.179102 -25.905942  11.640785  72.814924 -28.219073\n[11] -30.123995 105.197566 -44.406528  36.424904  43.994216  13.805380 -13.083712  30.577154  31.069692  12.954167\n[21]  -7.898943  23.036976  48.287925 103.192641  21.590591\n\nfit_glmm<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,maxiter=100,convtol=1e-10,\n               latent.factors=2,init.factors=initmat_glmm[lower.tri(initmat_glmm,TRUE)],\n               data=borneodata,distribution=\"poisson\",print_level=1,estimate=F)\nlikfn<-function(pars,model){\n  model$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\n  -logLik(model)\n}\nlikfn2<-function(pars,model){\n  model$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\n  apx<-approxSSM(model)\n  -(logLik(model)- KFAS:::scaling(model$y, model$u, model$distribution, apx$theta)+sum(dnorm(apx$y,apx$theta,sqrt(c(t(apply(apx$H,3,diag)))),log=T)))\n}\n\nlikfn3<-function(pars,model){\n  model$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\n  apx<-approxSSM(model)\n  -logLik(apx)\n}\n\n\npars<-initmat_glmm[lower.tri(initmat_glmm,TRUE)]\ngrad(likfn,pars,model=fit_glmm$model)\ngg2<-grad(likfn3,pars,model=fit_glmm$model)\ngrad(likfn2,pars,model=fit_glmm$model)\nmodel<-fit_glmm$model\n\nmodel$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\napp<-approxSSM(model) \nout<-KFS(app,smoothing=\"state\")\ngradmat1<-gradmat2<-gradmat3<-matrix(0,13,2)\n\nfor(j in 1:13)\n  for(k in 14:15)\n   for(i in 1:37){\n  gradmat1[j,k-13]<-gradmat1[j,k-13]+(app$y[i,j]*out$alpha[i,k]-(out$V[k,,i]+out$alpha[i,k]%*%t(out$alpha[i,]))%*%model$Z[j,,i])/app$H[j,j,i]\n  gradmat2[j,k-13]<-gradmat2[j,k-13]+(model$y[i,j]-exp(model$Z[j,,i]%*%out$alpha[i,]))*out$alpha[i,k]\n  gradmat3[j,k-13]<-\n    gradmat3[j,k-13]+(1/(2*app$H[j,j,i]))*(-2*app$y[i,j]*out$alpha[i,k]+2*(out$alpha[i,k]%*%t(out$alpha[i,]))%*%(model$Z[j,,i]))    \n}\n-c(gradmat1)\n-c(gradmat2)\n-c(gradmat3)\n\n\nlikfnG<-function(pars,model){\n  model$Z[,14:15,]<-\n  apx<-approxSSM(model)\n  -dnorm(apx$y[1,1],apx$theta[1,1],sqrt(apx$H[1,1,1]),log=T)\n}\nlikfnG<-function(pars,model){\n  model$Z[1,14,1]<-pars\n  apx<-approxSSM(model)\n  -dnorm(apx$y[1,1],apx$theta[1,1],sqrt(apx$H[1,1,1]),log=T)\n}\n\npars<-initmat_glmm[lower.tri(initmat_glmm,TRUE)]\nmodel$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\npars<-2\ngrad(likfnG,pars,model=model)\nmodel$Z[1,14,1]<-pars\napx<-approxSSM(model)\nout<-KFS(apx,smooth=\"state\")\n(-(1/apx$H[1,1,1])*(-apx$y[1,1]*out$alp[1,14]+(out$alp[1,14]%*%t(out$alp[1,])%*%model$Z[1,,1])))/dnorm(apx$y[1,1],apx$theta[1,1],sqrt(apx$H[1,1,1]))\n\n\nmodel$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\nmodel$Z[,14,1]<-pars\napp<-approxSSM(model) \nout<-KFS(app,smoothing=\"state\")\nj<-1\nk<-14\ni<-1\n1/(app$H[j,j,i])*(-app$y[i,j]*out$alpha[i,k]+(out$alpha[i,k]%*%t(out$alpha[i,])%*%model$Z[j,,i]))\n1/(app$H[j,j,i])*(-app$y[i,j]*out$alpha[i,]+(out$alpha[i,]%*%t(out$alpha[i,]))%*%model$Z[j,,i])\n\nc(solve(app$H[,,i])*(-app$y[i,j]*out$alpha[i,]+((out$alpha[i,]%*%t(out$alpha[i,])))%*%model$Z[,,i])\n\n likfnG<-function(pars,model){\n  model$Z[,14:15,]<-c(pars[1:13],0,pars[14:25])\n  apx<-approxSSM(model)\n  -sum(dnorm(apx$y,apx$theta,sqrt(c(t(apply(apx$H,3,diag)))),log=T))\n}\n\nlikfnG<-function(pars){\n  x<-c(1,pars)\n  y<-5\n  a<-c(2,3)\n  h<-1\n  dnorm(y,x%*%a,sqrt(h),log=T)\n}\n\ngradf<-function(pars){\n  x<-c(1,pars)\n  y<-5\n  a<-c(2,3)\n  h<-1\n-(1/h)*(-y*a[2]+(a[2]%*%t(a)%*%x))\n}\ngradf(5)\ngrad(likfnG,5)\n\nlikfnG<-function(pars){\n  x<-c(pars,pars)\n  y<-5\n  a<-c(2,3)\n  h<-1\n  dnorm(y,x%*%a,sqrt(h),log=T)\n}\n\ngradf<-function(pars){\n  x<-c(pars,pars)\n  y<-5\n  a<-c(2,3)\n  h<-1\n  -(1/h)*(-y*a[1]+(a[1]%*%t(a)%*%x))-(1/h)*(-y*a[2]+(a[2]%*%t(a)%*%x))\n}\ngradf(5)\ngrad(likfnG,5)\n\n\ntmpm = coefVars.slice(t).row(k);\ntmpm2 = coefs.col(t).t();\ngrad(j,k) += (ytilde(t,j)*coefs(k,t)-\n                arma::as_scalar((tmpm.cols(zind.col(j)) + coefs(k,t)*tmpm2.cols(zind.col(j)))*Z.slice(t).col(j)))/H(t,j); \nlikfn(initmat_glmm[lower.tri(initmat_glmm,TRUE)],model=fit_glmm$model)\n\nall.equal(unname(fit_glmm$fixed$coef),fit_glmmf1$coefs[3:15,37])\nall.equal(unname(fit_glmm$fixed$coef),fit_glmmf1$coefs[3:15,1])\nall.equal(t(unname(fit_glmm$factors$u)),fit_glmmf1$coefs[1:2,])\nout<-KFS(fit_glmm$model,smoothing=c(\"state\",\"signal\",\"mean\"))\n\nall.equal(t(unclass(unname(out$alp)[,1:13])),fit_glmmf1$coefs[3:15,],check.attributes=FALSE)\nunname(out$alp)[,1]\nall.equal(unname(t(outa0$alp)),fit_glmmf1$coefs)\nunname(outa0$r[1,])\nunname(outa0$alp[1,])\n-643.041\n-1252.48\n-0.9510  -0.7267   2.2972   2.0306   1.5586   1.1562   1.3007   1.6199   1.9270   1.3222   2.6679   2.1350   2.4867   2.5127   1.8053\n\nIteration 1, Log-likelihood: -1513.66\n\nfit_glmmf2<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",\n                  convtol=1e-8,maxiter=25,maxiter2=0,init.factor=initmat_glmmf,\n                  data=borneodata,control=list(trace=1,REPORT=1,maxit=2),method=\"BFGS\",\n                  estimate=T,trace=1,gradient=FALSE)\nfit_glmmf1$logLik\n\n\nfit_glmmf$coefs\nfit_glmm<-suppressWarnings(glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,maxiter=2,\n          latent.factors=2,init.factors=initmat_glmm[lower.tri(initmat_glmm,TRUE)],data=borneodata,distribution=\"poisson\",print_level=1,estimate=FALSE))\nfit_glmm$logLik\n#-1185.676\n#-1392.838\n#-1374.671\n\nsuppressWarnings(deviance(KFS(glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~Logging+Slope,maxiter=0,\n                                latent.factors=2,init.factors=initmat_glmm[lower.tri(initmat_glmm,TRUE)],\n                                data=borneodata,distribution=\"poisson\",print_level=1,estimate=FALSE)$model,maxiter=2)))\n#1187.882\n#979.3993\n#968.1192\n#-1277.913\n\n\n\nfactors<-fit_glmmf$coefs[1:2,]\nplot(x=factors[1,],y=factors[2,],pch=NA)\ntext(x=factors[1,],y=factors[2,], labels=as.character(1:37))\n\ndat = read.csv(\"born.csv\")\nY = dat[,-(1:4)]\nX = dat[,1:4] #remove id column\nplot(x=factors[1,],y=factors[2,],type=\"n\",main=\"LV + main effects\",xlab=\"LV1\",ylab=\"LV2\")\npoints(x=factors[1,],y=factors[2,],col=as.numeric(X[,2]),pch=as.numeric(X[,3]))\nlegend(\"topleft\", c(\"P\",\"L89\",\"L93\",\"L\",\"M\",\"U\"),col=c(3,1,2,1,1,1),pch=c(15,15,15,1,2,3))\n\n#######\napp<-approxSSM(fit_glmm$model,maxit=0)\nlogLik(fit_glmm$model,maxit=0)-logLik(app)\n#[1] -609.4362\nsum(dpois(c(fit_glmm$model$y),c(exp(app$theta)),log=TRUE)-dnorm(c(app$y),c(app$theta),sqrt(c(t(apply(app$H,3,diag)))),log=TRUE))\n#[1] -609.4362\n\nlogLik(app)+sum(dpois(c(fit_glmm$model$y),c(exp(app$theta)),log=TRUE)-dnorm(c(app$y),c(app$theta),sqrt(c(t(apply(app$H,3,diag)))),log=TRUE))\n-1185.676\n\ndpois(fit_glmm$model$y[1],exp(app$theta[1]),log=TRUE)-dnorm(app$y[1],app$theta[1],sqrt(app$H[1]),log=TRUE)\n##-424.9182\n\napp<-approxSSM(fit_glmm$model,maxit=1)\n\n\nout<-KFS(approxSSM(fit_glmm$model,maxit=0),filtering=c(\"state\",\"mean\"),smoothing=c(\"state\",\"mean\"),simp=F)\nout$F[,1]\nunname(out$a[2,])\nfit_glmmf$coefs[,1]\n\nunname(out$a[38,])\nfit_glmmf$coefs[,37]\n\nall.equal(fit_glmmf$lin,unclass(out$mu),check.attributes=FALSE)\nlogLik(fit_glmm$model,maxit=0)\nfit_glmmf$logLik #-1462.26\n\n\nunname(fit_glmm$fixed$coef)\nfit_glmmf$coefs[,37]\nout<-KFS(approxSSM(fit_glmm$model,maxiter=1),filtering=\"state\")\nunname(out$a[2,])\nfit_glmmf$coefs[,1]\nunname(out$a[38,])\nfit_glmmf$coefs[,37]\n\n\nfit_glmmf$lin[1:10]\napp$theta[1:10]\n\n\n\nfit_glmmf<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",\n           convtol=1e-8,maxiter=1,maxiter2=0,init.theta=fitinit_glmmf$linear.predictor,\n           data=borneodata,control=list(trace=1,REPORT=1,maxit=2),method=\"BFGS\",init.factor=initmat_glmmf,estimate=F,trace=2)\nfit_glmmf$logLik\n\ninitmat<-t(matrix(fitinit$fixed$coef,ncol=13)[6:7,])\n\ninit.factors<-initmat[lower.tri(initmat,TRUE)]\n\na<-proc.time()\n\n\nproc.time()-a\n\ninitmat<-t(tail(matrix(out$coef,ncol=ncol(Y)),2))\n\ninit.factors<-initmat[lower.tri(initmat,TRUE)]\n\nY = dat[,-(1:4)]\nX = dat[,2:4] #remove id column\n#remove rare species:\nY = as.matrix(Y[,apply(Y>0,2,sum)>10])\n\nXdat<-do.call(rbind, replicate(ncol(Y), X, simplify=FALSE)) # 5069  3\nspecies<-rep(colnames(Y),each=nrow(Y))\nborneodata<-data.frame(c(Y),Xdat,species)\nnames(borneodata)<-c(\"abundance\",colnames(Xdat),\"species\")\n\n\na<-proc.time()\nfit<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~Logging+Slope,\n          latent.factors=2,init.factors=init.factors,data=borneodata,distribution=\"poisson\",print_level=1,maxeval=1000000)\n\n\n\nfit$fixed$coef\nfit$factors$u\nsave(fit,file=\"fit30.rda\")\nplot(unclass(fit$factors$u),pch=NA)\ntext(unclass(fit$factors$u), labels=as.character(1:37))\n\nplot(unclass(fit$factors$u),type=\"n\",main=\"LV + main effects\",xlab=\"LV1\",ylab=\"LV2\")\npoints(unclass(fit$factors$u),col=as.numeric(dat[,2]),pch=as.numeric(dat[,3]))\nlegend(\"bottomright\", c(\"P\",\"L89\",\"L93\",\"L\",\"M\",\"U\"),col=c(3,1,2,1,1,1),pch=c(15,15,15,1,2,3))\n\n####\n\n\nset.seed(1)\nrandu1<-rnorm(37)\nrandu2<-rnorm(37)\n\nfitinit<-glmm(response.var=\"abundance\",grouping.var=\"species\",\n              fixed=~randu1+randu2,\n              latent.factors=0,data=borneodata,distribution=\"poisson\")\n\ninitmat<-t(matrix(fitinit$fixed$coef,ncol=13)[2:3,])\n\ninit.factors<-initmat[lower.tri(initmat,TRUE)]\n\na<-proc.time()\nfit<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,\n          latent.factors=2,init.factors=init.factors,data=borneodata,distribution=\"poisson\",print_level=1,maxeval=1000000)\n\nproc.time()-a\n\n\nsave(fit,file=\"fit30noX.rda\")\nplot(unclass(fit$factors$u),type=\"n\",main=\"LV + intercept\",xlab=\"LV1\",ylab=\"LV2\")\npoints(unclass(fit$factors$u),col=as.numeric(dat[,2]),pch=as.numeric(dat[,3]))\nlegend(\"bottomright\", c(\"P\",\"L89\",\"L93\",\"L\",\"M\",\"U\"),col=c(3,1,2,1,1,1),pch=c(15,15,15,1,2,3))\n\n####\ndat = read.csv(\"born.csv\")\nY = dat[,-(1:4)]\nX = dat[,1:4]\n\nXNew <- model.matrix(~Logging+Slope,data=X)\nXNew <- XNew[,-1]\n\n#remove rare species:\nY = as.matrix(Y[,apply(Y>0,2,sum)>3])\n\n\n\n## Starting values by fitting marginal glm's\nstart.values <- function(data, X, family, trial.size = NULL, num.lv = 2,seed=1) {\n  N <- nrow(data)\n  p <- ncol(data)\n  data <- as.matrix(data)\n  set.seed(seed)\n  index <- rmvnorm(N,rep(0,num.lv))\n  if(!is.null(X)) fit.mva <- manyglm(data~X+index,family=family, K = trial.size)  \n  if(is.null(X)) fit.mva <- manyglm(data~index,family=family, K = trial.size)  \n  params <- t(fit.mva$coef)\n  if(family == \"negative.binomial\") { phi <- fit.mva$phi } else { phi <- rep(1,p) }\n  \n  list(params=params,index=index,phi=phi)\n}\n\nlibrary(mvtnorm)\nlibrary(mvabund)\nsv<-start.values(Y,XNew,\"poisson\")\n\nplot(ft_main$lvs,type=\"n\",main=\"LV + main effects\",xlab=\"LV1\",ylab=\"LV2\")\npoints(ft_main$lvs,col=as.numeric(X[,2]),pch=as.numeric(X[,3]))\nlegend(\"bottomright\", c(\"P\",\"L89\",\"L93\",\"L\",\"M\",\"U\"),col=c(3,1,2,1,1,1),pch=c(15,15,15,1,2,3))\n",
    "created" : 1414771322968.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3773433566",
    "id" : "311216BB",
    "lastKnownWriteTime" : 1415178063,
    "path" : "U:/MyPrograms/gitrepos/GLMMF/glmmvsglmmf.R",
    "project_path" : "glmmvsglmmf.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}