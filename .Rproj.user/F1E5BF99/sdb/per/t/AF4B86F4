{
    "contents" : "# Ei toimi, tarvitsee tasoituksen faktoreita varten, nehän riippuu ajasta!\n# Voiko tasoitusta pelkistää niin että tehdään se vain faktoritiloille?\n# jossain vaiheessa betalle priori, oletus eksakti diffuusi, mutta voi laittaa myös var<inf ja E(beta) jotain\n# katso rosenin artikkelia vielä tarkemmin, pitäisikö rakentaa suoraan rinnakkaislaskennallinen versio?\n# erikseen funktiot mallille jossa ei latentteja faktoreita ja erikseen niiden kanssa.\n\nload(\"../gitrepos/GLMMF/kmodel.rda\")\n\nload(\"../StateSpaceGLMM/spiderdata.rda\")\nlibrary(GLMMF)\n\nset.seed(1)\nrandu1<-rnorm(max(spiderdata[,\"site\"]))\nrandu2<-rnorm(max(spiderdata[,\"site\"]))\n\nfitinit<-glmmf(group=\"species\",response=\"abundance\",distinct=~randu1+randu2,nfactors=0,distribution=\"poisson\",\n           data=spiderdata,control=list(trace=1,REPORT=1),method=\"BFGS\")\n\nfitinit$log #-3307.467\n\ninitmat<-t(matrix(fitinit$coefs[,28],nrow=3)[2:3,])\n\n\n\nfit<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",\n           data=spiderdata,control=list(trace=1,REPORT=1,maxit=1000),method=\"BFGS\",init.factor=initmat,estimate=TRUE)\n\nfactors<-fit$coefs[1:2,]\nplot(x=factors[1,],y=factors[2,],pch=NA)\ntext(x=factors[1,],y=factors[2,], labels=as.character(1:28))\n\n########\n\napproxSSM(kmodel)$iter\n\ninit.factors<-initmat[lower.tri(initmat,TRUE)]\nfit2<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,\n          latent.factors=2,init.factors=init.factors,data=spiderdata,distribution=\"poisson\",print_level=2,maxeval=100000)\n\n\n\nfit<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",maxiter=0,\n           data=spiderdata,control=list(trace=1,REPORT=1),method=\"BFGS\",init.factor=initmat,estimate=FALSE)\n\ndebug(glmmf)\nx<-matrix(0,12,2)\nx[,1]<-pars[1:12]\nx[2:12,2]<-pars[13:23]\nkmodel$Z[,13:14,]<-x\nlogLik(kmodel)\nfit<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",\n           data=spiderdata,control=list(trace=1,REPORT=1),method=\"Nelder-Mead\",init.factor=x,estimate=TRUE)\n\n\nsuppressWarnings(deviance(KFS(approxSSM(kmodel,maxiter=2))))\n\ndev<-rep(0,15)\nfor(i in 0:14)\ndev[i+1]<-suppressWarnings(deviance(KFS(kmodel,maxiter=i)))\n\nlla<-rep(0,15)\nfor(i in 0:14)\n  lla[i+1]<-suppressWarnings(logLik(approxSSM(kmodel,maxiter=i)))\n\nll<-rep(0,15)\nfor(i in 0:14)\n  ll[i+1]<-suppressWarnings(logLik(kmodel,maxiter=i))\n\nts.plot(dev)\nts.plot(ll)\nts.plot(dev-ll)\ndiff(dev)\ndiff(ll)\nsuppressWarnings(deviance(KFS(kmodel,maxiter=2)))\nload(\"kmodel.rda\")\nload(\"gmodel.rda\")\nmodel<-gmodel\n\nload(\"pars.rda\")\ninitmat<-matrix(0,12,2)\ninitmat[-13]<-pars\n\ninit.factors2<-initmat[lower.tri(initmat,TRUE)]\n\nkmodel$Z[,13:14,]<-initmat\nmodel$Z[1:2,,]<-t(initmat)\n\n\n\ntheta <- KFAS:::init_theta(model$y, model$u, rep(model$distribution,12)) \nmaxiter<-15\n#maxiter<-maxiter+1\nres<-GLMMF:::expfLogLikNoSim(model$y, model$Z, model$u, model$a1, model$P1, model$P1inf, \n                     rep(2,12), model$tol, maxiter, 1e-10, theta, model$Zind, model$nfactors)\n\n\ndev[maxiter]\nlla[maxiter]\nres$log+KFAS:::scaling(model$y,model$u,rep(model$distribution,12),res$theta)\nll[maxiter]\nres$conv\napp<-approxSSM(kmodel,maxiter=0)\nall.equal(res$theta,unclass(app$theta),check.attributes=FALSE)\no<-KFS(approxSSM(kmodel,maxiter=0),simp=F)\no$r[,28]\napp$theta[1:5,1:5]\nres$theta[1:5,1:5]\n\ninit.factors2<-initmat[lower.tri(initmat,TRUE)]\n\nfit<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,\n          latent.factors=2,init.factors=init.factors2,data=spiderdata,distribution=\"poisson\",print_level=3,maxeval=0)\n\n\nall.equal(fitinit$coefs[,28],out$alpha[28,],check.attributes=FALSE)\nlibrary(KFAS)\nkmodel<-SSModel(model$y~randu1+randu2,dist=\"poisson\")\nout<-KFS(kmodel,smoothing=c(\"state\",\"mean\",\"signal\"))\n\nout<-approxSSM(kmodel,maxiter=100)\nout$theta-fitinit$fitted\nkmodel$y-model$y\nlogLik(kmodel)\nfitinit$log\ninit.factors<-initmat[lower.tri(initmat,TRUE)]\n\nfit<-glmmf(group=\"species\",response=\"abundance\",distinct=~1,nfactors=2,distribution=\"poisson\",\n           data=spiderdata,control=list(trace=1,REPORT=1),method=\"BFGS\")\n\n\ndata(butterfly)\nfit.SSglmm<-glmm(response.var=\"Colias\", grouping.var=\"site\", fixed=~habitat + building + urbanveg,random=~1,\n                 data=butterfly,distribution=\"poisson\")\n\nfit.SSglmm2<-glmm(response.var=\"Colias\", grouping.var=\"site\", fixed=~habitat + building + urbanveg,random=~1,\n                  latent.factors=2,data=butterfly,distribution=\"poisson\",print_level=1)\n\ndata(spider)\n\n\nY<-as.matrix(spider$abund)\nX<-spider$x\nX<-do.call(rbind, replicate(ncol(Y), X, simplify=FALSE))\nspecies<-rep(colnames(spider$abund),each=nrow(Y))\nspiderdata<-data.frame(c(Y),X,species,site=rep(1:nrow(Y),ncol(Y)))\nnames(spiderdata)<-c(\"abundance\",colnames(X),\"species\",\"site\")\nsave(spiderdata,file=\"spiderdata.rda\")\ndebug(glmm)\nload(\"spiderdata.rda\")\n\n\nset.seed(2)\nrandu1<-rnorm(max(spiderdata[,\"site\"]))\nrandu2<-rnorm(max(spiderdata[,\"site\"]))\n\nfitinit<-glmm(response.var=\"abundance\",grouping.var=\"species\",\n              fixed=~1+randu1+randu2,\n              latent.factors=0,data=spiderdata,distribution=\"poisson\")\ninitmat<-t(matrix(fitinit$fixed$coef,nrow=3)[2:3,])\n\ninit.factors<-initmat[lower.tri(initmat,TRUE)]\n\nfit<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~1,\n          latent.factors=2,init.factors=init.factors,data=spiderdata,distribution=\"poisson\",print_level=1,maxeval=1000000)\n\nfit$fixed$coef\nfit$factors$u\n\nplot(x=as.numeric(fit$factors$u[,1]),y=as.numeric(fit$factors$u[,2]),pch=NA)\ntext(x=as.numeric(fit$factors$u[,1]),y=as.numeric(fit$factors$u[,2]), labels=as.character(1:28))\n\nfit1<-fit\nfitinit1<-fitinit\n####\n\ndatainit<-cbind(spiderdata,randu1,randu2)\ni=5\nsummary(glm(abundance~soil.dry+bare.sand+fallen.leaves+randu1,\n            data=datainit[datainit[,\"species\"]==colnames(spider$abund)[i],],family=poisson()))\n\nfit<-manyglm(Y~as.matrix(datainit[1:28,c(2:4,10)]),family=\"poisson\",show.warning=TRUE,\n             tol=1e-8)\nfit$iter\nfit$coef\nfit$fitted ## T??ll? on jotain rajoitteita ja siksi ei herjaa mit??n toisin kuin glm!!!\n\nlatent.factors<-2\nset.seed(123)\nrandu1<-rnorm(max(spiderdata[,\"site\"]))\nrandu2<-rnorm(max(spiderdata[,\"site\"]))\n\ndatainit<-cbind(spiderdata,randu1,randu2)\ni=5\nsummary(glm(abundance~soil.dry+bare.sand+fallen.leaves+moss+herb.layer+reflection + randu1+randu2,\n            data=datainit[datainit[,\"species\"]==colnames(spider$abund)[i],],family=poisson()))\n\nfit<-manyglm(Y~as.matrix(datainit[1:28,c(2:7,10,11)]),family=\"poisson\")\nfit$coef\n\ni<-0\ni<-i+1\nsummary(glm(abundance~soil.dry+bare.sand+fallen.leaves+moss+herb.layer+reflection + randu1+randu2,\n    data=spiderdata[spiderdata[,\"species\"]==colnames(spider$abund)[i],],family=poisson()))\n\n\n#i=5\n\ndatainit<-cbind(spiderdata,randu1,randu2)\ni=5\ncolnames(datainit)\nmodel<-SSModel(abundance~soil.dry+bare.sand+fallen.leaves+moss+herb.layer+reflection + randu1+randu2,\n               data=spiderdata[spiderdata[,\"species\"]==colnames(spider$abund)[i],],distribution=\"poisson\")\napp<-approxSSM(model,maxiter=1000)\nout<-KFS(app)\nout$d\nout$V[,,28]-out$V[,,27]\n\n\ni<-i+1\n\nmodel<-SSModel(abundance~soil.dry+moss+herb.layer+reflection + randu1+randu2,\n               data=spiderdata[spiderdata[,\"species\"]==colnames(spider$abund)[i],],distribution=\"poisson\")\n\napp<-approxSSM(model,maxiter=100)\nout<-KFS(app)\nout$d\nsqrt(diag(out$V[,,28]))\nKFS(SSModel(abundance~soil.dry+moss+herb.layer+reflection + randu1+randu2,\n    data=spiderdata[spiderdata[,\"species\"]==colnames(spider$abund)[i],],distribution=\"poisson\",tol=1e-8),maxiter=1000)\n\n\n\n\nset.seed(12345)\nrandu1<-rnorm(max(spiderdata[,\"site\"]))\nrandu2<-rnorm(max(spiderdata[,\"site\"]))\n\nfitinit<-glmm(response.var=\"abundance\",grouping.var=\"species\",\n              fixed=~soil.dry+moss+herb.layer+reflection + randu1+randu2,\n          latent.factors=0,data=spiderdata,distribution=\"poisson\",print_level=3,maxeval=1000000)\n\nfit<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~soil.dry+moss+herb.layer+reflection,\n          latent.factors=latent.factors,data=spiderdata,distribution=\"poisson\",print_level=3,maxeval=1000000)\n\n\nnames(fit)\nfit$fixed$coef\nfit$fixed\n###\nfit2<-fit\n\nfit<-glmm(response.var=\"abundance\",grouping.var=\"species\",fixed=~soil.dry,\n          latent.factors=0,data=spiderdata,distribution=\"poisson\",print_level=3)\nout<-KFS(fit$model,smoothing=c(\"state\",\"mean\"))\n\napp<-approxSSM(fit$model)\noutapp<-KFS(app)\noutapp$Finf\ndim(fit$model$y)\n",
    "created" : 1414130112195.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3580544877",
    "id" : "AF4B86F4",
    "lastKnownWriteTime" : 1414143321,
    "path" : "U:/MyPrograms/gitrepos/GLMMF/spidertest.R",
    "project_path" : "spidertest.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}