{
    "contents" : "// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; indent-tabs-mode: nil; -*-\n\n// we only include RcppArmadillo.h which pulls Rcpp.h in for us\n#include \"ssglmInternals.h\"\n// via the depends attribute we tell Rcpp to create hooks for\n// RcppArmadillo so that the build process will know what to do\n//\n// [[Rcpp::depends(RcppArmadillo)]]\n\n// simple example of creating two matrices and\n// returning the result of an operatioon on them\n//\n// via the exports attribute we tell Rcpp to make this function\n// available from R\n// [[Rcpp::export]]\n\nRcpp::List expfLogLikNoSim(const Rcpp::NumericMatrix y_, const Rcpp::NumericVector Z_, const Rcpp::NumericMatrix u_,\nconst Rcpp::NumericVector a1_, const Rcpp::NumericMatrix P1_, const Rcpp::NumericMatrix P1inf_, \nconst Rcpp::IntegerVector dist, double tol, int maxiter, double convtol, Rcpp::NumericMatrix theta_\n, const Rcpp::IntegerMatrix Zind_, const int nfactors){\n  \n  const unsigned int n = y_.nrow();\n  const unsigned int p = y_.ncol();\n  const unsigned int m = P1_.nrow();\n  const unsigned int m1 = Zind_.nrow();\n  \n  const arma::mat y(y_.begin(), n,p, false);\n  const arma::cube Z(Z_.begin(), m1, p, n, false);\n  const arma::mat u(u_.begin(), n,p, false);\n  const arma::vec a1(a1_.begin(),m, false);\n  const arma::mat P1(P1_.begin(),m,m, false);\n  const arma::mat P1inf(P1inf_.begin(),m,m, false);\n  \n  const arma::imat izind(Zind_.begin(),m1,p,true);\n  const arma::umat zind = arma::conv_to<arma::umat>::from(izind);\n  \n  arma::mat theta(theta_.begin(), n,p, true);\n  arma::mat ytilde(n,p);\n  arma::mat H(n,p);\n  \n  double loglik;    \n  int conv = 0; \n  // approximating Gaussian model\n  loglik = approxInternal(y, Z, u, a1, P1, P1inf, dist, tol, ytilde, H, theta, maxiter, convtol, \n            conv, zind, nfactors);\n  \n  if(conv<0){\n    loglik = -std::numeric_limits<double>::max();\n  }\n  \n  return Rcpp::List::create(Rcpp::Named(\"theta\") = theta,\n  Rcpp::Named(\"logLik\") = loglik,Rcpp::Named(\"convergence\") = conv);\n}\n",
    "created" : 1413876631100.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "291191319",
    "id" : "195DB2B0",
    "lastKnownWriteTime" : 1414137140,
    "path" : "U:/MyPrograms/gitrepos/GLMMF/src/expfLogLikNoSim.cpp",
    "project_path" : "src/expfLogLikNoSim.cpp",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "cpp"
}