{
    "contents" : "#include \"ssglmInternals.h\"\n// [[Rcpp::depends(RcppArmadillo)]]\n\n// Below is a simple example of exporting a C++ function to R. You can\n// source this function into an R session using the Rcpp::sourceCpp \n// function (or via the Source button on the editor toolbar)\n\n// For more on using Rcpp click the Help button on the editor toolbar\n//double dnormSumLog(const arma::vec& x, const arma::vec& means,const arma::vec& vars){\n//  double res=0.0;\n//  for(unsigned int i=0; i<x.size(); i++){\n//    if(arma::is_finite(x[i])){\n//      res += R::dnorm( x[i], means[i], sqrt(vars[i]), 1);\n//    }\n//  }\n//  return res;\n//}\n\ndouble scaling(int dist, const arma::vec& y, const arma::vec& u,const arma::vec& theta,\n               const arma::vec& ytilde, const arma::vec& H){\n  double res=0.0;  \n  switch (dist) {       \n    case 2:\n    for(unsigned int i=0; i<y.size(); i++){\n      if(arma::is_finite(y[i])){\n        res += R::dpois( y[i], exp(theta[i])*u[i], 1) - R::dnorm( ytilde[i], theta[i], sqrt(H[i]), 1);\n      }\n    }\n    break;    \n    case 3:\n    for(unsigned int i=0; i<y.size(); i++){\n      if(arma::is_finite(y[i])){\n        res += R::dbinom( y[i], u[i], exp(theta[i])/(1.0+exp(theta[i])), 1)- R::dnorm( ytilde[i], theta[i], sqrt(H[i]), 1);\n      }\n    }\n    break;\n    case 4:\n    for(unsigned int i=0; i<y.size(); i++){\n      if(arma::is_finite(y[i])){\n         res += R::dgamma( y[i], u[i], exp(theta[i])/u[i], 1)- R::dnorm( ytilde[i], theta[i], sqrt(H[i]), 1);\n      }\n    }\n    break;\n    case 5:\n    for(unsigned int i=0; i<y.size(); i++){\n      if(arma::is_finite(y[i])){\n        res += R::dnbinom( y[i], u[i], exp(theta[i]), 1)- R::dnorm( ytilde[i], theta[i], sqrt(H[i]), 1);\n      }\n    }\n    break;    \n  }\n  return res;\n}\n",
    "created" : 1414135566031.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2755856447",
    "id" : "F0703EA9",
    "lastKnownWriteTime" : 1414136489,
    "path" : "U:/MyPrograms/gitrepos/GLMMF/src/dnormSumLog.cpp",
    "project_path" : "src/dnormSumLog.cpp",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "cpp"
}