{
    "contents" : "# Poisson model\nmodel<-SSModel(VanKilled~-1+SSMcustom(Z=1,T=1,a1=1,P1=0,P1inf=0,Q=0,R=0)+law+\n                 SSMseasonal(period=12,sea.type='dummy',Q=0),\n               data=Seatbelts, distribution='poisson')\n\nlikfn<-function(psi){\n  model$Z[,13,]<-psi\n  set.seed(1)\n  -logLik(model,tol=1e-15,maxiter=1000)\n}\n\ngradf<-function(psi){\n  model$Z[,13,]<-psi\n  set.seed(1)\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  -sum(out$alpha[,13]*(model$y-exp(out$theta)))\n}\n\n#model$P1inf[]<-0\n#model$P1inf[1]<-1\ngrad(likfn,2)-gradf(2)\n\n\nf<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  -sum(dpois(model$y,exp(out$theta),log=TRUE))+sum(dnorm(app$y,out$theta,sqrt(c(apply(app$H,3,diag))),log=TRUE))-logLik(app)\n}\n\ngrad(likfn,2)\ngrad(f,2)\n\n\nfpois<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  -sum(dpois(model$y,exp(out$theta),log=TRUE))\n}\n\nfnorm<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  sum(dnorm(app$y,out$theta,sqrt(c(apply(app$H,3,diag))),log=TRUE))\n}\n\nfapp<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  -logLik(app)\n}\n\n\ngpois<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  -sum(out$alpha[,13]*(model$y-exp(out$theta)))\n}\n\n\ngnorm<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  sum(-0.5*(exp(app$theta)-model$y^2*exp(-app$theta)-1)*out$alpha[,13])\n  \n}\n\n\ngapp<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  g<-0\n  for(i in 1:nrow(model$y))\n    g <- g + (app$y[i]*out$alpha[i,13]-out$V[13,,i]%*%model$Z[1,,i]-out$alpha[i,13]%*%t(out$alpha[i,])%*%model$Z[1,,i])/app$H[1,1,i]\n  g\n}\n\ngrad(fpois,2)+grad(fnorm,2)+grad(fapp,2)\n\n\ngnorm(2)\ngpois(2)\ngapp(2)\n\ngrad(likfn,2)\ngrad(f,2)\n\n\n\nfnorm2<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model)\n  sum(-0.5*(-app$theta+model$y^2*exp(-app$theta)+exp(app$theta)-2*model$y))\n}\n\ngnorm<-function(psi){\n  model$Z[,13,]<-psi\n  out<-KFS(model,smoothing=c(\"state\",\"signal\"),convtol=1e-15,maxiter=1000)\n  app<-approxSSM(model,tol=1e-15,maxiter=1000)\n  sum(-0.5*(exp(app$theta)-model$y^2*exp(-app$theta)-1)*out$alpha[,13])\n  \n}\n\n\ngnorm<-function(psi){\n  model$Z[,13,]<-psi\n  app<-approxSSM(model,tol=1e-15,maxiter=1000)\n  out<-KFS(app,smoothing=c(\"state\",\"signal\",\"disturbance\"))  \n   - sum(0.5*(1+2*app$theta*exp(-app$theta)-app$theta^2*exp(-app$theta))*out$alpha[,13])  \n}\ngrad(fnorm2,2)\ngnorm(2)\ngrad(fapp,2)\ngrad(fnorm,2)\nall.equal(grad(fnorm2,2),grad(fnorm,2))\n\n\ngradf<-function(psi){\n  model$Z[,13,]<-psi\n  app<-approxSSM(model,tol=1e-15,maxiter=1000)\n  out<-KFS(app)\n  #out<-KFS(model,smoothing=c(\"state\",\"signal\"),maxiter=0) #,convtol=1e-15,maxiter=1000)\n  g<-0\n  for(i in 1:nrow(model$y))\n    g <- g - (out$alpha[i,]*model$y[i]-(out$alpha[i,]*exp(app$theta[i])+0.5*exp(app$theta[i])*(app$theta[i]+2)*model$Z[1,,i]%*%out$V[,,i]))\n  g\n}\ngradf(2)\nfit<-optim(f=likfn,gr=gradf,p=2,method=\"BFGS\")\nmodel$Z[,13,]<-fit$par\n\nout<-KFS(model)\n\nts.plot(cbind(model$y,out$mu),col=1:2)\n\n\ndiag(model$P1)[1:12]<-100000\n\n\n\n\nlikfn<-function(psi){\n  model$Z[,13,]<-psi\n  -logLik(model,maxiter=0)\n}\n\n\n\n\n\n\nlikfn2<-function(psi){\n  model$Z[,13,]<-psi\n  lik<- -logLik(model,tol=1e-15,maxiter=1000)\n  attr(lik,\"gradient\")<-unname(gradf(psi))\n  lik\n}\n\n\n\n\ngradf(2)\ngrad(likfn,2,method.args=list(r=6))\n\nfit2<-optim(f=likfn,gr=gradf,p=2,method=\"BFGS\")\n\nf<-function(x) Vectorize(gradf)(x)-grad(Vectorize(likfn),x)\ncurve(f(x),from=0,to=3)\ncurve(grad(Vectorize(likfn),x),from=0,to=3)\n\nroot<-uniroot(gradf,interval=c(0,3),tol=1e-15)\ngradf(root$root)\n\nf<-function(x){ grad(likfn,x)}\nuniroot(f,interval=c(0,3))\n\nlikfnP<-function(psi){\n  model$Z[1,13,]<-psi\n  out<-KFS(model,smoothing=c(\"signal\"),convtol=1e-15,maxiter=1000)\n  -sum(dpois(model$y,exp(out$theta),log=TRUE))\n}\n\ngrad(likfnP,fit2$par)-grad(likfn,fit2$par)\ngradf(10)\n",
    "created" : 1415020651482.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4048328349",
    "id" : "48120A2F",
    "lastKnownWriteTime" : 1415172421,
    "path" : "U:/MyPrograms/gitrepos/GLMMF/gradientToimii.R",
    "project_path" : "gradientToimii.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "source_on_save" : false,
    "type" : "r_source"
}