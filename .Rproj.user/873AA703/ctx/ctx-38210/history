aic
aic - min(aic)
aic <- aic - min(aic)
Reduce("+", Map("*",initfactors_list, aic/sum(aic)))
aic/sum(aic)
aic
aic
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
fit$logLik#-2.0*fit$logLik+(2.0*nfactors*p-1)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),.combine="c") %dopar% fun(iter)
aic
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
-2.0*fit$logLik+2.0*(nfactors*p-1)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),.combine="c") %dopar% fun(iter)
aic
aic <- aic - min(aic)
aic
exp(0.5*aic)/sum(exp(0.5*aic)
)
aic
exp(-0.5*aic)/sum(exp(-0.5*aic)
)
exp(-0.5*aic)/sum(exp(-0.5*aic))
exp(-0.5*aic)/sum(exp(-0.5*aic)))
exp(-0.5*aic)/sum(exp(-0.5*aic))
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),.combine="c") %dopar% fun(iter)
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
w
stopCluster(cl)
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=6,threads=8,samples=25)
proc.time()-a
w
mc$data<-quote(data)
mc$estimate=FALSE
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
-2.0*fit$logLik+2.0*(nfactors*p-1)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),.combine="c") %dopar% fun(iter)
stopCluster(cl)
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
w
2.0*(nfactors*p-1)
aic
aic-min(aic)
p
initfactors_list
initfactors<-Reduce("+", Map("*",initfactors_list, w))
initfactors
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
mc$init.factor[1]<-1
fit<-eval(mc)
-2.0*fit$logLik+2.0*(nfactors*p-1)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),.combine="c") %dopar% fun(iter)
cl <- makeCluster(threads)
registerDoSNOW(cl)
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
mc$init.factor[1]<-1
fit<-eval(mc)
-2.0*fit$logLik+2.0*(nfactors*p-1)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),.combine="c") %dopar% fun(iter)
aic
w
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
w
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=6,threads=8,samples=50)
proc.time()-a
w
hist(w)
sort(w)
sum(w>0.01)
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=2,threads=8,samples=50)
proc.time()-a
w
sort(w)
sum(w>0.01)
sum(w>0.001)
4/50
mc$control
mc$control$maxit
cl <- makeCluster(threads)
registerDoSNOW(cl)
mc$data<-quote(data)
mc$estimate=T
mc$control$maxit<-2
mc$estimate=FALSE
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par=fit$fit$par)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),) %dopar% fun(iter)
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=2,threads=8,samples=10)
proc.time()-a
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par=fit$fit$par)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),) %dopar% fun(iter)
i<-1
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par=fit$fit$par)
fit
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par="test")
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par="test")
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),) %dopar% fun(iter)
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
x<-list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par="test")
x
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data"),) %dopar% fun(iter)
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par="test")
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
aic
mc$data<-quote(data)
mc$estimate=TRUE
mc$control$maxit<-2
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),par=fit$fit$par)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
aic
apply(aic,function(x) length(x[[2]]))
sapply(aic,function(x) length(x[[2]]))
fit
names(fit)
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
initfactors[]<-0
initfactors[lower.tri(initfactors,TRUE)]<-fit$fit$par
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),initfactors=initfactors)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
initfactors<-matrix(0,p,nfactors)
initfactors[lower.tri(initfactors,TRUE)]<-fit$fit$par
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),initfactors=initfactors)
}
aic<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
aic
stopCluster(cl)
stopCluster(cl)
res<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
cl <- makeCluster(threads)
registerDoSNOW(cl)
res<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
stopCluster(cl)
lapply(res,function(x) x[[1]]*x[[2]])
sapply(res, "[[", 1)
aic <- sapply(res, "[[", 1)
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
w
sapply(res, "[[", 2)
lapply(res, "[[", 2)
Reduce("+", Map("*",lapply(res, "[[", 2), w))
aic <- sapply(res, "[[", 1)
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
initfactors<-Reduce("+", Map("*",lapply(res, "[[", 2), w))
glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initfactors,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=F,tol=tol,trace=2,...)
f<-glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initfactors,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=F,tol=tol,trace=2,...)
f<-glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initmat,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=F,tol=tol,trace=2,...)
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=6,threads=8,samples=50)
proc.time()-a
w
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=6,threads=8,samples=50,par.maxit=5)
proc.time()-a
par.maxit
mc
mc$par.maxit
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=6,threads=8,samples=50)
proc.time()-a
mc$control$maxit
fun <- function(i) {
mc$init.factor<-initfactors_list[[i]]
fit<-eval(mc)
initfactors<-matrix(0,p,nfactors)
initfactors[lower.tri(initfactors,TRUE)]<-fit$fit$par
list(aic=-2.0*fit$logLik+2.0*(nfactors*p-1),initfactors=initfactors)
}
res<-foreach(iter=1:samples,.export=c("glmmf","mc","data")) %dopar% fun(iter)
stopCluster(cl)
aic <- sapply(res, "[[", 1)
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
w
sort(w)
hist(w)
aic
aic-min(aic)
sum(w>0.01)
sum(w>0.05)
sum(w>0.1)
max(w)
aic <- sapply(res, "[[", 1)
w<- exp(-0.5*(aic - min(aic)))
w<-w/sum(w)
initfactors<-Reduce("+", Map("*",lapply(res, "[[", 2), w))
initfactors
f<-glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initfactors,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=F,tol=tol,trace=2,...) #initmat=-1499
f<-glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initfactors,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=T,tol=tol,trace=1,...) #initmat=-1499
f<-glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initmat,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=T,tol=tol,trace=1,...) #initmat=-1499
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=3,threads=8,samples=16,par.maxit=5)
proc.time()-a
f<-glmmf(group=group,response=response,common.fixed=common.fixed,distinct.fixed=distinct.fixed,random=random,
nfactors=nfactors,data=data,
distribution=distribution,
u=u, correlating.effects=correlating.effects, common.dispersion=common.dispersion, init.random.cov=init.random.cov,
init.dispersion=init.dispersion, init.factor=initfactors,init.theta=init.theta,
return.model=return.model,maxiter=maxiter,maxiter2=maxiter2, convtol=convtol,estimate=T,tol=tol,trace=1,...)
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=3,threads=8,samples=32,par.maxit=5)
proc.time()-a
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,estimate=T,trace=1,group_size=6,threads=8,samples=16,par.maxit=5)
proc.time()-a
parfit10noX<-parfit
save(parfit10noX,file="parfit10noX.rda")
fit<-parfit10noX
fit$log #-1346.198
fit$coefs
factors<-fit$coefs[1:2,]
plot(x=factors[1,],y=factors[2,],pch=NA)
text(x=factors[1,],y=factors[2,], labels=as.character(1:37))
dat = read.csv("born.csv")
Y = dat[,-(1:4)]
X = dat[,1:4] #remove id column
X
X = dat[,1:4] #remove id column
plot(x=factors[1,],y=factors[2,],type="n",main="LV + main effects",xlab="LV1",ylab="LV2")
points(x=factors[1,],y=factors[2,],col=as.numeric(X[,2]),pch=as.numeric(X[,3]))
legend("topleft", c("P","L89","L93","L","M","U"),col=c(3,1,2,1,1,1),pch=c(15,15,15,1,2,3))
plot(x=factors[1,],y=factors[2,],type="n",main="LV + intercept",xlab="LV1",ylab="LV2")
points(x=factors[1,],y=factors[2,],col=as.numeric(X[,2]),pch=as.numeric(X[,3]))
legend("topleft", c("P","L89","L93","L","M","U"),col=c(3,1,2,1,1,1),pch=c(15,15,15,1,2,3))
a<-proc.time()
fit<-glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-8,maxiter=50,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=1000),method="BFGS",init.factor=initmat,estimate=T,trace=1)
fit$log #-7957.194
a<-proc.time()
fit<-glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="negative binomial",
convtol=1e-8,maxiter=50,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=1000),method="BFGS",init.factor=initmat,estimate=T,trace=1)
fit$log #-7957.194
traceback()
library(MASS)
a<-proc.time()
fit<-glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="negative binomial",
convtol=1e-8,maxiter=50,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=1000),method="BFGS",init.factor=initmat,estimate=T,trace=1)
fit$log #-7957.194
install.packages("roxygen2")
install.packages("devtools")
library(GLMMF)
rm(parallel_glmmf)
a<-proc.time()
fit<-glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="negative binomial",
convtol=1e-8,maxiter=50,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(trace=1,REPORT=1,maxit=1000),method="BFGS",init.factor=initmat,estimate=T,trace=1)
fit$log #-7957.194
set.seed(12345)
randu1<-rnorm(37)
randu2<-rnorm(37)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="negative binomial",maxiter=100,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=T)
traceback()
library(GLMMF)
set.seed(12345)
randu1<-rnorm(37)
randu2<-rnorm(37)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="negative binomial",maxiter=100,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=T)
debug(glmmf)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="negative binomial",maxiter=100,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=T)
glm.nb(tmpf,data=data)$theta
model$u
init.dispersion
debug(fitGLMMF)
res$model$u
model<-res$model
theta <- init_theta(model$y, model$u, model$distribution)
theta
dist<-pmatch(x = model$distribution,
table = c("gaussian", "poisson", "binomial",
"gamma", "negative binomial"))
out<-filterNoSim(model$y, model$Z, model$u, model$a1, model$P1, model$P1inf, dist,
model$tol, maxiter, maxiter2, convtol, theta, model$Zind, model$nfactors,trace)
model$dist
dist
exp(theta)
out$log
names(out)
out$conv
res<-expfLogLikNoSim(model$y, model$Z, model$u, model$a1, model$P1, model$P1inf,
dist, model$tol, maxiter, maxiter2, convtol, theta, model$Zind, model$nfactors,trace)
theta
model$Z
model$y
tmpf
glm.nb(tmpf,data=data)
common.fixed
tmpf<-formula(paste(response,paste(distinct.fixed,collapse="")))
tmpf
glm.nb(tmpf,data=data)
data
randu1
glm.nb(tmpf,data=cbind(data,randu1,randu2)
)
glm.nb(tmpf,data=cbind(data,randu1,randu2))$theta
model$u
model$u[]<-1
res<-expfLogLikNoSim(model$y, model$Z, model$u, model$a1, model$P1, model$P1inf,
res<-expfLogLikNoSim(model$y, model$Z, model$u, model$a1, model$P1, model$P1inf,
dist, model$tol, maxiter, maxiter2, convtol, theta, model$Zind, model$nfactors,trace)
library(GLMMF)
set.seed(12345)
randu1<-rnorm(37)
randu2<-rnorm(37)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="negative binomial",maxiter=100,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=T)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="negative binomial",maxiter=0,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=T)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="negative binomial",maxiter=0,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=F)
library(GLMMF)
dat = read.csv("born.csv")
Y = dat[,-(1:4)]
X = dat[,2:4] #remove id column
#remove rare species:
Y = as.matrix(Y[,apply(Y>0,2,sum)>10])
Xdat<-do.call(rbind, replicate(ncol(Y), X, simplify=FALSE)) # 5069  3
species<-rep(colnames(Y),each=nrow(Y))
borneodata<-data.frame(c(Y),Xdat,species)
names(borneodata)<-c("abundance",colnames(Xdat),"species")
set.seed(12345)
randu1<-rnorm(37)
randu2<-rnorm(37)
fitinit<-glmmf(group="species",response="abundance",distinct=~randu1+randu2,
nfactors=0,distribution="poisson",maxiter=100,
data=borneodata,control=list(trace=1,REPORT=1),method="BFGS",trace=2,estimate=T)
fitinit$log #-8241.699
initmat<-t(matrix(fitinit$coefs[,37],nrow=3)[2:3,])
dim(Y)
96/8
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,
estimate=T,trace=1,group_size=12,threads=8,samples=16,par.maxit=2)
proc.time()-a
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,
estimate=T,trace=1,group_size=12,threads=8,samples=16,par.maxit=2)
proc.time()-a
n_groups
group_size
groups <- split(sample(group_names[-(1:(nfactors-1))]), cut(1:(p-nfactors+1), n_groups, labels = FALSE))
groups <- lapply(groups,append,group_names[1:(nfactors-1)],0)
groups
groups <- split(sample(group_names[-(1:(nfactors-1))]), cut(1:(p-nfactors+1), n_groups, labels = FALSE))
groups <- split(sample(group_names[-(1:(nfactors-1))]), cut(1:(p-nfactors+1), n_groups, labels = FALSE))
groups <- split(sample(group_names[-(1:(nfactors-1))]), cut(1:(p-nfactors+1), n_groups, labels = FALSE))
groups <- lapply(groups,append,group_names[1:(nfactors-1)],0)
groups
i<-1
i<-4
fun(i)
for(i in 1:length(groups))
fun(i)
?foreach
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,
estimate=T,trace=1,group_size=12,threads=8,samples=16,par.maxit=2)
source('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,
estimate=T,trace=1,group_size=12,threads=8,samples=16,par.maxit=2)
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,
estimate=T,trace=1,group_size=12,threads=8,samples=8,par.maxit=2)
stopCluster(cl)
stopCluster(cl)
stopCluster(cl)
a<-proc.time()
parfit<-parallel_glmmf(group="species",response="abundance",distinct=~1,nfactors=2,distribution="poisson",
convtol=1e-6,maxiter=25,maxiter2=10,init.theta=fitinit$linear.predictor,
data=borneodata,control=list(maxit=100,trace=1,REPORT=1),method="BFGS",init.factor=initmat,
estimate=T,trace=1,group_size=12,threads=8,samples=8,par.maxit=2)
debugSource('U:/MyPrograms/gitrepos/GLMMF/R/parallel_glmmf.R')
stopCluster(cl)
stopCluster(cl)
